<@F print_list
    <l>
    <<@ i 0>
      <@while <lt i <# l>>
              <<stdout <: l i>>
              <@ i <+ i 1>>>>>>

<@F print_list_rec
    <l>
    <<stdout <: l 0>>
     <@case <gt <# l> 1>
            <print_list_rec <:/ l
                                1
                                <# l>>>
            None>>>

<@F sum_nums
    <l>
    <<@ s <: l 0>>
     <@case <gt <# l> 1>
            <@ s
               <+ s
                  <sum_nums <:/ l 1 <# l>>>>>
            None>
     s>>

<@F range
    <start end>
    <<@ l <+ `<> start>>
     <@case <gt end start>
            <<@ i 0>
             <@ r <range <+ start 1> end>>
             <@while <lt i <# r>>
                     <<@ l <+ l <: r i>>>
                      <@ i <+ i 1>>>>>
             l>
            l>>

<@F sigma
    <f l>
    <<@ sum 0>
     <@ i 0>
     <@while <lt i <# l>>
             <<@ sum <+ sum <f <: l i>>>>
              <@ i <+ i 1>>>>
     sum>>

<@F extend
    <a b>
    <<@ i 0>
    <@while <lt i <# b>>
            <<@ a <+ a <: b i>>>
             <@ i <+ i 1>>>>
    a>>


<@F list
    <*args> ! *args internally converted into a list representation
    <args>>

<@F head
    <l>
    <: l 0>>


<@F tail
    <l>
    <:/ l 1 <# l>>>


<@F set
    <l index val>
    <<@ nl `<>>
     <@ i 0>
     <@while
        <lt i <# l>>
        <<@case
          <= index i>
          <@ nl <+ nl val>>
          <@ nl <+ nl <: l i>>>>
          <@ i <+ i 1>>>>
      nl>>

<@F find
    <a key>
    < <@ i 0>
      <@ found_at -1>
      <@while
        <lt i <# a>>
        <<@case
          <= <: a i> key>
          <@ found_at i>
          None>
          <@ i <+ i 1>>>>
      found_at>>

<@F in
   <key a> 
   <@case <= <find a key> -1> False True>>


<@F empty?
    <l>
    <@case
      <= <# l> 0>
      True
      False>>


<@F map
    <f l>
    <@case
      <= <# l> 1>
      <f <head l>>
      <+
        <list <f <head l>>>
        <map f <tail l>>>
    >>



